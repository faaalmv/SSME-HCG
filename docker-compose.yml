version: '3.8'

services:
  api-gateway:
    image: traefik:v2.10
    command: 
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  user-service:
    build: ./services/user_service
    volumes:
      - ./services/user_service:/app
    env_file:
      - .env
    depends_on:
      - db
    command: /usr/local/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/api/users`)"
      - "traefik.http.services.user-service.loadbalancer.server.port=8000"

  clinical-record-service:
    build: ./services/clinical_record_service
    volumes:
      - ./services/clinical_record_service:/app
    env_file:
      - .env
    depends_on:
      - db
    command: /usr/local/bin/uvicorn app.main:app --host 0.0.0.0 --port 8001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.clinical-record-service.rule=PathPrefix(`/api/records`)"
      - "traefik.http.services.clinical-record-service.loadbalancer.server.port=8001"

  inference-service:
    build: ./services/inference_service
    volumes:
      - ./services/inference_service:/app
    env_file:
      - ./services/inference_service/.env
    command: /usr/local/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inference-service.rule=PathPrefix(`/api/inference`)"
      - "traefik.http.services.inference-service.loadbalancer.server.port=8000"

  scheduling-service:
    build: ./services/scheduling_service
    volumes:
      - ./services/scheduling_service:/app
    env_file:
      - .env
    depends_on:
      - db
    command: /usr/local/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scheduling-service.rule=PathPrefix(`/api/appointments`)"
      - "traefik.http.services.scheduling-service.loadbalancer.server.port=8000"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

volumes:
  postgres_data: